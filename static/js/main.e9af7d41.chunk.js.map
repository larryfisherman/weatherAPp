{"version":3,"sources":["components/SearchingBar/SearchingBar.jsx","icons/index.js","icons/Clear.svg","icons/Clouds.svg","icons/Flurries.svg","icons/Mist.svg","icons/Rain.svg","icons/Snow.svg","icons/Sunny.svg","components/WeatherBox/WeatherBox.jsx","components/WeekDays/WeekDays.jsx","components/AdditionalInfo/AdditionalInfo.jsx","components/App.js","index.js"],"names":["currentWeatherApi","fiveDaysApi","SearchingBar","shareCurrentWeatherResult","shareToggleClass","shareNextHours","useState","toggleClass","setToggleClass","query","setQuery","setWeather","type","placeholder","className","onChange","e","target","value","onKeyPress","event","key","fetch","then","res","json","result","console","log","threeHoursTemp","Math","floor","round","list","main","temp","threeHoursSky","weather","threeHoursDate","dt_txt","sixHoursTemp","sixHoursSky","sixHoursDate","nineHoursTemp","nineHoursSky","nineHoursDate","tempMin","temp_min","tempMax","temp_max","location","name","sunrise","Date","sys","toISOString","substr","sunset","country","wind","speed","pressure","sky","Icons","Clear","Clouds","Flurries","Mist","Rain","Snow","Sunny","dateBuilder","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","WeatherBox","currentWeatherResult","src","alt","WeekDays","nextHours","AdditionalInfo","App","setCurrentWeatherResult","setNextHours","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9af7d41.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './SearchingBar.css'\r\n\r\n  const currentWeatherApi = {\r\n    key: \"5460cb53463514612fab001d3067fc4e\",\r\n    base: \"https://api.openweathermap.org/data/2.5/\"\r\n  }\r\n\r\n  const fiveDaysApi = {\r\n    base: \"https://api.openweathermap.org/data/2.5/\",\r\n    key: \"5fd2a278c2455f638b0fe4da35b1d244\"\r\n  }\r\n\r\n  const weatherBit = {\r\n    key: \"d94ac67839f0473f83b5add7ffc287c9\",\r\n    base: \"https://api.weatherbit.io/v2.0/forecast/\"\r\n  }\r\n\r\n  const SearchingBar = ({shareCurrentWeatherResult, shareToggleClass, shareNextHours}) => {\r\n\r\n    const [toggleClass, setToggleClass] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n    const [weather, setWeather] = useState({});\r\n\r\n    const search = event => {\r\n        if(event.key === \"Enter\") {\r\n            setToggleClass(true);\r\n            fetch(`${fiveDaysApi.base}forecast?q=${query}&appid=${fiveDaysApi.key}`)\r\n              .then(res => res.json())\r\n              .then (result => {\r\n                console.log(result)\r\n                const threeHoursTemp = (Math.floor(Math.round(result.list[0].main.temp) - 273.15))\r\n                const threeHoursSky = result.list[0].weather[0].main\r\n                const threeHoursDate = result.list[0].dt_txt\r\n                const sixHoursTemp = (Math.floor(Math.round(result.list[12].main.temp) - 273.15))\r\n                const sixHoursSky = result.list[1].weather[0].main;\r\n                const sixHoursDate = result.list[1].dt_txt\r\n                const nineHoursTemp = (Math.floor(Math.round(result.list[2].main.temp) - 273.15 ))\r\n                const nineHoursSky = result.list[2].weather[0].main\r\n                const nineHoursDate = result.list[2].dt_txt\r\n                shareNextHours({threeHoursTemp, threeHoursSky, threeHoursDate, sixHoursTemp, sixHoursSky, sixHoursDate, nineHoursTemp, nineHoursSky, nineHoursDate})\r\n            })\r\n            fetch(`${currentWeatherApi.base}weather?q=${query}&units=metric&APPID=${currentWeatherApi.key}`)\r\n                .then(res => res.json())\r\n                .then(result => {\r\n                    setWeather(result);\r\n                    const temp = (Math.floor(result.main.temp));\r\n                    const tempMin = result.main.temp_min\r\n                    const tempMax = result.main.temp_max;\r\n                    const location = result.name;\r\n                    const sunrise = new Date(result.sys.sunrise * 1000).toISOString().substr(11, 8);\r\n                    const sunset = new Date(result.sys.sunset * 1000).toISOString().substr(11, 8);\r\n                    const country = result.sys.country;\r\n                    const wind = result.wind.speed;\r\n                    const pressure = result.main.pressure;\r\n                    const sky = result.weather[0].main;\r\n                    shareCurrentWeatherResult({tempMax, location, tempMin, sunrise, sunset, wind, country, pressure, temp, sky});\r\n                    shareToggleClass({toggleClass})\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <input type = \"text\"\r\n          placeholder = \"Search..\"\r\n          className = {toggleClass ? \"Active\" : \"unActive\"}\r\n          onChange = {e => setQuery(e.target.value)}\r\n          value = {query}\r\n          onKeyPress = {search}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchingBar;","import Clear from './Clear.svg'\r\nimport Clouds from './Clouds.svg'\r\nimport Flurries from './Flurries.svg'\r\nimport Mist from './Mist.svg'\r\nimport Rain from './Rain.svg'\r\nimport Snow from './Snow.svg'\r\nimport Sunny from './Sunny.svg'\r\n\r\nexport const Icons = {\r\n  Clear,\r\n  Clouds,\r\n  Flurries,\r\n  Mist,\r\n  Rain,\r\n  Snow,\r\n  Sunny\r\n}","export default __webpack_public_path__ + \"static/media/Clear.63561cd5.svg\";","export default __webpack_public_path__ + \"static/media/Clouds.4e0858f0.svg\";","export default __webpack_public_path__ + \"static/media/Flurries.da4a73d7.svg\";","export default __webpack_public_path__ + \"static/media/Mist.a6733a73.svg\";","export default __webpack_public_path__ + \"static/media/Rain.6412f4fc.svg\";","export default __webpack_public_path__ + \"static/media/Snow.5ccde895.svg\";","export default __webpack_public_path__ + \"static/media/Sunny.f72ea8a7.svg\";","import React from 'react';\r\nimport './WeatherBox.css'\r\nimport { Icons } from '../../icons';\r\n\r\n\r\nconst dateBuilder = (d) => {\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`\r\n}\r\n\r\nconst WeatherBox = ({currentWeatherResult}) => {\r\n        return (\r\n            <div className=\"locationDate\">\r\n                <span>{currentWeatherResult.location}</span>\r\n                <span>{dateBuilder(new Date())}</span>\r\n                <span>{currentWeatherResult.temp}°C</span>\r\n                <img src={Icons[currentWeatherResult.sky]} alt={Icons[currentWeatherResult.sky]} />   \r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default WeatherBox;","import React from 'react';\r\nimport './WeekDays.css'\r\nimport { Icons } from '../../icons';\r\n\r\nconst WeekDays = ({nextHours}) => {\r\n    \r\n    return (\r\n        <div className=\"weekDays\">\r\n            <div className=\"one\">\r\n                <img src={Icons[nextHours.threeHoursSky]} \r\n                alt = {Icons[nextHours.threeHoursSky]}/> \r\n                <span>{nextHours.threeHoursTemp} °C</span>\r\n                <span>{nextHours.threeHoursDate}</span>\r\n            </div>\r\n            <div className=\"two\"> \r\n                <img src={Icons[nextHours.sixHoursSky]} \r\n                alt = {Icons[nextHours.sixHoursSky]}/> \r\n                <span>{nextHours.sixHoursTemp} °C</span>\r\n                <span>{nextHours.sixHoursDate}</span>\r\n            </div>\r\n                <div className=\"three\"> \r\n                    <img src={Icons[nextHours.nineHoursSky]} \r\n                    alt = {Icons[nextHours.nineHoursSky]}/> \r\n                    <span>{nextHours.nineHoursTemp} °C</span>\r\n                    <span>{nextHours.nineHoursDate}</span>\r\n                    </div>\r\n                <div className=\"four\">  \r\n                    <img src={Icons[nextHours.sixHoursSky]} \r\n                    alt = {Icons[nextHours.sixHoursSky]}/> \r\n                    <span>{nextHours.sixHoursTemp} °C</span>\r\n                    <span>{nextHours.sixHoursDate}</span>\r\n                </div>\r\n                <div className=\"five\">  \r\n                    <img src={Icons[nextHours.sixHoursSky]} \r\n                    alt = {Icons[nextHours.sixHoursSky]}/> \r\n                    <span>{nextHours.sixHoursTemp} °C</span>\r\n                    <span>{nextHours.sixHoursDate}</span>\r\n                </div>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default WeekDays;","import React from 'react';\r\nimport './AdditionalInfo.css'\r\n\r\n\r\nconst AdditionalInfo = ({currentWeatherResult}) => {\r\n  \r\n    return (\r\n     <div className=\"additionalInfo\">\r\n       <div className=\"maxTemp\">\r\n          <p>{Math.floor(currentWeatherResult.tempMax)}°C</p>\r\n          <p>Temp. max.</p>\r\n        </div>\r\n        <div className=\"wind\">\r\n          <p>{(currentWeatherResult.wind)} mph</p>\r\n          <p>Wind</p>\r\n        </div>\r\n        <div className=\"sunrise\">\r\n         <p>{currentWeatherResult.sunrise}</p> \r\n         <p>Sunrise</p>\r\n        </div>\r\n        <div className=\"lowestTemp\">\r\n          <p>{Math.floor(currentWeatherResult.tempMin)}°C</p>\r\n          <p>Temp. min.</p>\r\n        </div>\r\n        <div className=\"pressure\">\r\n          <p>{currentWeatherResult.pressure} hPa</p>\r\n          <p>Pressure</p>\r\n        </div>\r\n        <div className=\"sunset\">\r\n          <p>{currentWeatherResult.sunset}</p>\r\n          <p>Sunset</p>  \r\n        </div>\r\n     </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AdditionalInfo;","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport SearchingBar from './SearchingBar/SearchingBar'\r\nimport WeatherBox from './WeatherBox/WeatherBox'\r\nimport WeekDays from '../components/WeekDays/WeekDays'\r\nimport AdditionalInfo from './AdditionalInfo/AdditionalInfo';\r\n\r\nconst App = () =>  {\r\n\r\n  const [currentWeatherResult, setCurrentWeatherResult] = useState({});\r\n  const [nextHours, setNextHours] = useState({})\r\n  const [toggleClass, setToggleClass] = useState(false);\r\n\r\n \r\n  const shareCurrentWeatherResult = (res) => {\r\n    setCurrentWeatherResult(res)\r\n  }\r\n  \r\n  const shareToggleClass = (res) => {\r\n    setToggleClass(res)\r\n  }\r\n\r\n  const shareNextHours = (res) => {\r\n    setNextHours(res)\r\n  }\r\n\r\n    return (\r\n      <div className={toggleClass ? \"activeApp\" : \"unActiveApp\" }>\r\n        <div className={toggleClass ? \"activeHeader\" : \"unActiveHeader\" }>\r\n            <h1 className = {toggleClass ? \"active\" : \"unActive\" }> Weather App </h1>\r\n            <SearchingBar shareNextHours = {shareNextHours} shareCurrentWeatherResult = {shareCurrentWeatherResult} shareToggleClass = {shareToggleClass}/>\r\n        </div>\r\n        <div className={toggleClass ? \"activeMain\" : \"unActiveMain\" }>\r\n            <WeatherBox currentWeatherResult = {currentWeatherResult}/>\r\n            <AdditionalInfo currentWeatherResult = {currentWeatherResult} shareToggleClass = {shareToggleClass}/>\r\n            <WeekDays nextHours = {nextHours}/>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}